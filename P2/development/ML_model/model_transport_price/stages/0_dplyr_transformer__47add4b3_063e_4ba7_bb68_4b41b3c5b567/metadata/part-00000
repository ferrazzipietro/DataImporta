{"class":"org.apache.spark.ml.feature.SQLTransformer","timestamp":1654971039139,"sparkVersion":"3.2.1","uid":"dplyr_transformer__47add4b3_063e_4ba7_bb68_4b41b3c5b567","paramMap":{"statement":"SELECT\n  `mean_of_transport`,\n  `country_of_arrival`,\n  `custom`,\n  `net_price`,\n  `net_price_per_unit`,\n  POWER(`net_price_per_unit`, 2.0) AS `net_price_per_unit2`,\n  CASE WHEN (`price_transport` < 0.0) THEN 0.0 ELSE `price_transport` END AS `price_transport`,\n  POWER(`net_price`, 2.0) AS `net_price2`,\n  POWER(`net_price`, 3.0) AS `net_price3`,\n  POWER(`net_price`, 4.0) AS `net_price4`,\n  POWER(`net_price`, 5.0) AS `net_price5`,\n  POWER(`net_price`, 6.0) AS `net_price6`,\n  POWER(`net_price`, 7.0) AS `net_price7`,\n  POWER(`net_price`, 8.0) AS `net_price8`,\n  POWER(`net_price`, 9.0) AS `net_price9`,\n  POWER(`net_price`, 10.0) AS `net_price10`\nFROM (\n  SELECT\n    *,\n    POWER(`net_price_per_unit`, 2.0) AS `net_price_per_unit2`,\n    `price_transport_net` - `net_price` AS `price_transport`\n  FROM (\n    SELECT\n      CAST(`price_transport_net` AS DOUBLE) AS `price_transport_net`,\n      `mean_of_transport`,\n      `country_of_arrival`,\n      `custom`,\n      CAST(`net_price` AS DOUBLE) AS `net_price`,\n      CAST(`net_price_per_unit` AS DOUBLE) AS `net_price_per_unit`\n    FROM `__THIS__`\n  ) `q01`\n) `q02`"},"defaultParamMap":{}}
